/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SitemapRouteImport } from './routes/sitemap'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginPhoneRouteImport } from './routes/login-phone'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ReservationsRouteRouteImport } from './routes/reservations/route'
import { Route as ManageRouteRouteImport } from './routes/manage/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReservationsIndexRouteImport } from './routes/reservations/index'
import { Route as PoolsIndexRouteImport } from './routes/pools/index'
import { Route as ManageIndexRouteImport } from './routes/manage/index'
import { Route as ReservePoolIdRouteImport } from './routes/reserve/$poolId'
import { Route as ReservationsReservationIdRouteImport } from './routes/reservations/$reservationId'
import { Route as PoolsPoolIdRouteImport } from './routes/pools/$poolId'
import { Route as ManageReservationsIndexRouteImport } from './routes/manage/reservations/index'
import { Route as ManagePoolsIndexRouteImport } from './routes/manage/pools/index'
import { Route as ManageReservationsReservationIdRouteImport } from './routes/manage/reservations/$reservationId'
import { Route as ManagePoolsNewRouteImport } from './routes/manage/pools/new'
import { Route as ManagePoolsPoolIdRouteImport } from './routes/manage/pools/$poolId'

const SitemapRoute = SitemapRouteImport.update({
  id: '/sitemap',
  path: '/sitemap',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginPhoneRoute = LoginPhoneRouteImport.update({
  id: '/login-phone',
  path: '/login-phone',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationsRouteRoute = ReservationsRouteRouteImport.update({
  id: '/reservations',
  path: '/reservations',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageRouteRoute = ManageRouteRouteImport.update({
  id: '/manage',
  path: '/manage',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationsIndexRoute = ReservationsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ReservationsRouteRoute,
} as any)
const PoolsIndexRoute = PoolsIndexRouteImport.update({
  id: '/pools/',
  path: '/pools/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageIndexRoute = ManageIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ManageRouteRoute,
} as any)
const ReservePoolIdRoute = ReservePoolIdRouteImport.update({
  id: '/reserve/$poolId',
  path: '/reserve/$poolId',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationsReservationIdRoute =
  ReservationsReservationIdRouteImport.update({
    id: '/$reservationId',
    path: '/$reservationId',
    getParentRoute: () => ReservationsRouteRoute,
  } as any)
const PoolsPoolIdRoute = PoolsPoolIdRouteImport.update({
  id: '/pools/$poolId',
  path: '/pools/$poolId',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageReservationsIndexRoute = ManageReservationsIndexRouteImport.update({
  id: '/reservations/',
  path: '/reservations/',
  getParentRoute: () => ManageRouteRoute,
} as any)
const ManagePoolsIndexRoute = ManagePoolsIndexRouteImport.update({
  id: '/pools/',
  path: '/pools/',
  getParentRoute: () => ManageRouteRoute,
} as any)
const ManageReservationsReservationIdRoute =
  ManageReservationsReservationIdRouteImport.update({
    id: '/reservations/$reservationId',
    path: '/reservations/$reservationId',
    getParentRoute: () => ManageRouteRoute,
  } as any)
const ManagePoolsNewRoute = ManagePoolsNewRouteImport.update({
  id: '/pools/new',
  path: '/pools/new',
  getParentRoute: () => ManageRouteRoute,
} as any)
const ManagePoolsPoolIdRoute = ManagePoolsPoolIdRouteImport.update({
  id: '/pools/$poolId',
  path: '/pools/$poolId',
  getParentRoute: () => ManageRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/manage': typeof ManageRouteRouteWithChildren
  '/reservations': typeof ReservationsRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/login-phone': typeof LoginPhoneRoute
  '/signup': typeof SignupRoute
  '/sitemap': typeof SitemapRoute
  '/pools/$poolId': typeof PoolsPoolIdRoute
  '/reservations/$reservationId': typeof ReservationsReservationIdRoute
  '/reserve/$poolId': typeof ReservePoolIdRoute
  '/manage/': typeof ManageIndexRoute
  '/pools': typeof PoolsIndexRoute
  '/reservations/': typeof ReservationsIndexRoute
  '/manage/pools/$poolId': typeof ManagePoolsPoolIdRoute
  '/manage/pools/new': typeof ManagePoolsNewRoute
  '/manage/reservations/$reservationId': typeof ManageReservationsReservationIdRoute
  '/manage/pools': typeof ManagePoolsIndexRoute
  '/manage/reservations': typeof ManageReservationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/login-phone': typeof LoginPhoneRoute
  '/signup': typeof SignupRoute
  '/sitemap': typeof SitemapRoute
  '/pools/$poolId': typeof PoolsPoolIdRoute
  '/reservations/$reservationId': typeof ReservationsReservationIdRoute
  '/reserve/$poolId': typeof ReservePoolIdRoute
  '/manage': typeof ManageIndexRoute
  '/pools': typeof PoolsIndexRoute
  '/reservations': typeof ReservationsIndexRoute
  '/manage/pools/$poolId': typeof ManagePoolsPoolIdRoute
  '/manage/pools/new': typeof ManagePoolsNewRoute
  '/manage/reservations/$reservationId': typeof ManageReservationsReservationIdRoute
  '/manage/pools': typeof ManagePoolsIndexRoute
  '/manage/reservations': typeof ManageReservationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/manage': typeof ManageRouteRouteWithChildren
  '/reservations': typeof ReservationsRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/login-phone': typeof LoginPhoneRoute
  '/signup': typeof SignupRoute
  '/sitemap': typeof SitemapRoute
  '/pools/$poolId': typeof PoolsPoolIdRoute
  '/reservations/$reservationId': typeof ReservationsReservationIdRoute
  '/reserve/$poolId': typeof ReservePoolIdRoute
  '/manage/': typeof ManageIndexRoute
  '/pools/': typeof PoolsIndexRoute
  '/reservations/': typeof ReservationsIndexRoute
  '/manage/pools/$poolId': typeof ManagePoolsPoolIdRoute
  '/manage/pools/new': typeof ManagePoolsNewRoute
  '/manage/reservations/$reservationId': typeof ManageReservationsReservationIdRoute
  '/manage/pools/': typeof ManagePoolsIndexRoute
  '/manage/reservations/': typeof ManageReservationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/manage'
    | '/reservations'
    | '/login'
    | '/login-phone'
    | '/signup'
    | '/sitemap'
    | '/pools/$poolId'
    | '/reservations/$reservationId'
    | '/reserve/$poolId'
    | '/manage/'
    | '/pools'
    | '/reservations/'
    | '/manage/pools/$poolId'
    | '/manage/pools/new'
    | '/manage/reservations/$reservationId'
    | '/manage/pools'
    | '/manage/reservations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/login-phone'
    | '/signup'
    | '/sitemap'
    | '/pools/$poolId'
    | '/reservations/$reservationId'
    | '/reserve/$poolId'
    | '/manage'
    | '/pools'
    | '/reservations'
    | '/manage/pools/$poolId'
    | '/manage/pools/new'
    | '/manage/reservations/$reservationId'
    | '/manage/pools'
    | '/manage/reservations'
  id:
    | '__root__'
    | '/'
    | '/manage'
    | '/reservations'
    | '/login'
    | '/login-phone'
    | '/signup'
    | '/sitemap'
    | '/pools/$poolId'
    | '/reservations/$reservationId'
    | '/reserve/$poolId'
    | '/manage/'
    | '/pools/'
    | '/reservations/'
    | '/manage/pools/$poolId'
    | '/manage/pools/new'
    | '/manage/reservations/$reservationId'
    | '/manage/pools/'
    | '/manage/reservations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ManageRouteRoute: typeof ManageRouteRouteWithChildren
  ReservationsRouteRoute: typeof ReservationsRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  LoginPhoneRoute: typeof LoginPhoneRoute
  SignupRoute: typeof SignupRoute
  SitemapRoute: typeof SitemapRoute
  PoolsPoolIdRoute: typeof PoolsPoolIdRoute
  ReservePoolIdRoute: typeof ReservePoolIdRoute
  PoolsIndexRoute: typeof PoolsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sitemap': {
      id: '/sitemap'
      path: '/sitemap'
      fullPath: '/sitemap'
      preLoaderRoute: typeof SitemapRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login-phone': {
      id: '/login-phone'
      path: '/login-phone'
      fullPath: '/login-phone'
      preLoaderRoute: typeof LoginPhoneRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservations': {
      id: '/reservations'
      path: '/reservations'
      fullPath: '/reservations'
      preLoaderRoute: typeof ReservationsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage': {
      id: '/manage'
      path: '/manage'
      fullPath: '/manage'
      preLoaderRoute: typeof ManageRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservations/': {
      id: '/reservations/'
      path: '/'
      fullPath: '/reservations/'
      preLoaderRoute: typeof ReservationsIndexRouteImport
      parentRoute: typeof ReservationsRouteRoute
    }
    '/pools/': {
      id: '/pools/'
      path: '/pools'
      fullPath: '/pools'
      preLoaderRoute: typeof PoolsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/': {
      id: '/manage/'
      path: '/'
      fullPath: '/manage/'
      preLoaderRoute: typeof ManageIndexRouteImport
      parentRoute: typeof ManageRouteRoute
    }
    '/reserve/$poolId': {
      id: '/reserve/$poolId'
      path: '/reserve/$poolId'
      fullPath: '/reserve/$poolId'
      preLoaderRoute: typeof ReservePoolIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservations/$reservationId': {
      id: '/reservations/$reservationId'
      path: '/$reservationId'
      fullPath: '/reservations/$reservationId'
      preLoaderRoute: typeof ReservationsReservationIdRouteImport
      parentRoute: typeof ReservationsRouteRoute
    }
    '/pools/$poolId': {
      id: '/pools/$poolId'
      path: '/pools/$poolId'
      fullPath: '/pools/$poolId'
      preLoaderRoute: typeof PoolsPoolIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/reservations/': {
      id: '/manage/reservations/'
      path: '/reservations'
      fullPath: '/manage/reservations'
      preLoaderRoute: typeof ManageReservationsIndexRouteImport
      parentRoute: typeof ManageRouteRoute
    }
    '/manage/pools/': {
      id: '/manage/pools/'
      path: '/pools'
      fullPath: '/manage/pools'
      preLoaderRoute: typeof ManagePoolsIndexRouteImport
      parentRoute: typeof ManageRouteRoute
    }
    '/manage/reservations/$reservationId': {
      id: '/manage/reservations/$reservationId'
      path: '/reservations/$reservationId'
      fullPath: '/manage/reservations/$reservationId'
      preLoaderRoute: typeof ManageReservationsReservationIdRouteImport
      parentRoute: typeof ManageRouteRoute
    }
    '/manage/pools/new': {
      id: '/manage/pools/new'
      path: '/pools/new'
      fullPath: '/manage/pools/new'
      preLoaderRoute: typeof ManagePoolsNewRouteImport
      parentRoute: typeof ManageRouteRoute
    }
    '/manage/pools/$poolId': {
      id: '/manage/pools/$poolId'
      path: '/pools/$poolId'
      fullPath: '/manage/pools/$poolId'
      preLoaderRoute: typeof ManagePoolsPoolIdRouteImport
      parentRoute: typeof ManageRouteRoute
    }
  }
}

interface ManageRouteRouteChildren {
  ManageIndexRoute: typeof ManageIndexRoute
  ManagePoolsPoolIdRoute: typeof ManagePoolsPoolIdRoute
  ManagePoolsNewRoute: typeof ManagePoolsNewRoute
  ManageReservationsReservationIdRoute: typeof ManageReservationsReservationIdRoute
  ManagePoolsIndexRoute: typeof ManagePoolsIndexRoute
  ManageReservationsIndexRoute: typeof ManageReservationsIndexRoute
}

const ManageRouteRouteChildren: ManageRouteRouteChildren = {
  ManageIndexRoute: ManageIndexRoute,
  ManagePoolsPoolIdRoute: ManagePoolsPoolIdRoute,
  ManagePoolsNewRoute: ManagePoolsNewRoute,
  ManageReservationsReservationIdRoute: ManageReservationsReservationIdRoute,
  ManagePoolsIndexRoute: ManagePoolsIndexRoute,
  ManageReservationsIndexRoute: ManageReservationsIndexRoute,
}

const ManageRouteRouteWithChildren = ManageRouteRoute._addFileChildren(
  ManageRouteRouteChildren,
)

interface ReservationsRouteRouteChildren {
  ReservationsReservationIdRoute: typeof ReservationsReservationIdRoute
  ReservationsIndexRoute: typeof ReservationsIndexRoute
}

const ReservationsRouteRouteChildren: ReservationsRouteRouteChildren = {
  ReservationsReservationIdRoute: ReservationsReservationIdRoute,
  ReservationsIndexRoute: ReservationsIndexRoute,
}

const ReservationsRouteRouteWithChildren =
  ReservationsRouteRoute._addFileChildren(ReservationsRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ManageRouteRoute: ManageRouteRouteWithChildren,
  ReservationsRouteRoute: ReservationsRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  LoginPhoneRoute: LoginPhoneRoute,
  SignupRoute: SignupRoute,
  SitemapRoute: SitemapRoute,
  PoolsPoolIdRoute: PoolsPoolIdRoute,
  ReservePoolIdRoute: ReservePoolIdRoute,
  PoolsIndexRoute: PoolsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
