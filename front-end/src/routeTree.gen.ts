/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ReserveRouteImport } from './routes/reserve'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ReservationsIndexRouteImport } from './routes/reservations/index'
import { Route as ManageIndexRouteImport } from './routes/manage/index'
import { Route as ListingsIndexRouteImport } from './routes/listings/index'
import { Route as ReservationsReservationIdRouteImport } from './routes/reservations/$reservationId'
import { Route as ListingsListingIdRouteImport } from './routes/listings/$listingId'
import { Route as ManageReservationsIndexRouteImport } from './routes/manage/reservations/index'
import { Route as ManageListingsIndexRouteImport } from './routes/manage/listings/index'
import { Route as ManageReservationsReservationIdRouteImport } from './routes/manage/reservations/$reservationId'
import { Route as ManageListingsNewRouteImport } from './routes/manage/listings/new'
import { Route as ManageListingsListingIdRouteImport } from './routes/manage/listings/$listingId'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ReserveRoute = ReserveRouteImport.update({
  id: '/reserve',
  path: '/reserve',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationsIndexRoute = ReservationsIndexRouteImport.update({
  id: '/reservations/',
  path: '/reservations/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageIndexRoute = ManageIndexRouteImport.update({
  id: '/manage/',
  path: '/manage/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListingsIndexRoute = ListingsIndexRouteImport.update({
  id: '/listings/',
  path: '/listings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ReservationsReservationIdRoute =
  ReservationsReservationIdRouteImport.update({
    id: '/reservations/$reservationId',
    path: '/reservations/$reservationId',
    getParentRoute: () => rootRouteImport,
  } as any)
const ListingsListingIdRoute = ListingsListingIdRouteImport.update({
  id: '/listings/$listingId',
  path: '/listings/$listingId',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageReservationsIndexRoute = ManageReservationsIndexRouteImport.update({
  id: '/manage/reservations/',
  path: '/manage/reservations/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageListingsIndexRoute = ManageListingsIndexRouteImport.update({
  id: '/manage/listings/',
  path: '/manage/listings/',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageReservationsReservationIdRoute =
  ManageReservationsReservationIdRouteImport.update({
    id: '/manage/reservations/$reservationId',
    path: '/manage/reservations/$reservationId',
    getParentRoute: () => rootRouteImport,
  } as any)
const ManageListingsNewRoute = ManageListingsNewRouteImport.update({
  id: '/manage/listings/new',
  path: '/manage/listings/new',
  getParentRoute: () => rootRouteImport,
} as any)
const ManageListingsListingIdRoute = ManageListingsListingIdRouteImport.update({
  id: '/manage/listings/$listingId',
  path: '/manage/listings/$listingId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reserve': typeof ReserveRoute
  '/signup': typeof SignupRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/reservations/$reservationId': typeof ReservationsReservationIdRoute
  '/listings': typeof ListingsIndexRoute
  '/manage': typeof ManageIndexRoute
  '/reservations': typeof ReservationsIndexRoute
  '/manage/listings/$listingId': typeof ManageListingsListingIdRoute
  '/manage/listings/new': typeof ManageListingsNewRoute
  '/manage/reservations/$reservationId': typeof ManageReservationsReservationIdRoute
  '/manage/listings': typeof ManageListingsIndexRoute
  '/manage/reservations': typeof ManageReservationsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reserve': typeof ReserveRoute
  '/signup': typeof SignupRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/reservations/$reservationId': typeof ReservationsReservationIdRoute
  '/listings': typeof ListingsIndexRoute
  '/manage': typeof ManageIndexRoute
  '/reservations': typeof ReservationsIndexRoute
  '/manage/listings/$listingId': typeof ManageListingsListingIdRoute
  '/manage/listings/new': typeof ManageListingsNewRoute
  '/manage/reservations/$reservationId': typeof ManageReservationsReservationIdRoute
  '/manage/listings': typeof ManageListingsIndexRoute
  '/manage/reservations': typeof ManageReservationsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reserve': typeof ReserveRoute
  '/signup': typeof SignupRoute
  '/listings/$listingId': typeof ListingsListingIdRoute
  '/reservations/$reservationId': typeof ReservationsReservationIdRoute
  '/listings/': typeof ListingsIndexRoute
  '/manage/': typeof ManageIndexRoute
  '/reservations/': typeof ReservationsIndexRoute
  '/manage/listings/$listingId': typeof ManageListingsListingIdRoute
  '/manage/listings/new': typeof ManageListingsNewRoute
  '/manage/reservations/$reservationId': typeof ManageReservationsReservationIdRoute
  '/manage/listings/': typeof ManageListingsIndexRoute
  '/manage/reservations/': typeof ManageReservationsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/reserve'
    | '/signup'
    | '/listings/$listingId'
    | '/reservations/$reservationId'
    | '/listings'
    | '/manage'
    | '/reservations'
    | '/manage/listings/$listingId'
    | '/manage/listings/new'
    | '/manage/reservations/$reservationId'
    | '/manage/listings'
    | '/manage/reservations'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/reserve'
    | '/signup'
    | '/listings/$listingId'
    | '/reservations/$reservationId'
    | '/listings'
    | '/manage'
    | '/reservations'
    | '/manage/listings/$listingId'
    | '/manage/listings/new'
    | '/manage/reservations/$reservationId'
    | '/manage/listings'
    | '/manage/reservations'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/reserve'
    | '/signup'
    | '/listings/$listingId'
    | '/reservations/$reservationId'
    | '/listings/'
    | '/manage/'
    | '/reservations/'
    | '/manage/listings/$listingId'
    | '/manage/listings/new'
    | '/manage/reservations/$reservationId'
    | '/manage/listings/'
    | '/manage/reservations/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ReserveRoute: typeof ReserveRoute
  SignupRoute: typeof SignupRoute
  ListingsListingIdRoute: typeof ListingsListingIdRoute
  ReservationsReservationIdRoute: typeof ReservationsReservationIdRoute
  ListingsIndexRoute: typeof ListingsIndexRoute
  ManageIndexRoute: typeof ManageIndexRoute
  ReservationsIndexRoute: typeof ReservationsIndexRoute
  ManageListingsListingIdRoute: typeof ManageListingsListingIdRoute
  ManageListingsNewRoute: typeof ManageListingsNewRoute
  ManageReservationsReservationIdRoute: typeof ManageReservationsReservationIdRoute
  ManageListingsIndexRoute: typeof ManageListingsIndexRoute
  ManageReservationsIndexRoute: typeof ManageReservationsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reserve': {
      id: '/reserve'
      path: '/reserve'
      fullPath: '/reserve'
      preLoaderRoute: typeof ReserveRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservations/': {
      id: '/reservations/'
      path: '/reservations'
      fullPath: '/reservations'
      preLoaderRoute: typeof ReservationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/': {
      id: '/manage/'
      path: '/manage'
      fullPath: '/manage'
      preLoaderRoute: typeof ManageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/': {
      id: '/listings/'
      path: '/listings'
      fullPath: '/listings'
      preLoaderRoute: typeof ListingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reservations/$reservationId': {
      id: '/reservations/$reservationId'
      path: '/reservations/$reservationId'
      fullPath: '/reservations/$reservationId'
      preLoaderRoute: typeof ReservationsReservationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/listings/$listingId': {
      id: '/listings/$listingId'
      path: '/listings/$listingId'
      fullPath: '/listings/$listingId'
      preLoaderRoute: typeof ListingsListingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/reservations/': {
      id: '/manage/reservations/'
      path: '/manage/reservations'
      fullPath: '/manage/reservations'
      preLoaderRoute: typeof ManageReservationsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/listings/': {
      id: '/manage/listings/'
      path: '/manage/listings'
      fullPath: '/manage/listings'
      preLoaderRoute: typeof ManageListingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/reservations/$reservationId': {
      id: '/manage/reservations/$reservationId'
      path: '/manage/reservations/$reservationId'
      fullPath: '/manage/reservations/$reservationId'
      preLoaderRoute: typeof ManageReservationsReservationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/listings/new': {
      id: '/manage/listings/new'
      path: '/manage/listings/new'
      fullPath: '/manage/listings/new'
      preLoaderRoute: typeof ManageListingsNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/manage/listings/$listingId': {
      id: '/manage/listings/$listingId'
      path: '/manage/listings/$listingId'
      fullPath: '/manage/listings/$listingId'
      preLoaderRoute: typeof ManageListingsListingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ReserveRoute: ReserveRoute,
  SignupRoute: SignupRoute,
  ListingsListingIdRoute: ListingsListingIdRoute,
  ReservationsReservationIdRoute: ReservationsReservationIdRoute,
  ListingsIndexRoute: ListingsIndexRoute,
  ManageIndexRoute: ManageIndexRoute,
  ReservationsIndexRoute: ReservationsIndexRoute,
  ManageListingsListingIdRoute: ManageListingsListingIdRoute,
  ManageListingsNewRoute: ManageListingsNewRoute,
  ManageReservationsReservationIdRoute: ManageReservationsReservationIdRoute,
  ManageListingsIndexRoute: ManageListingsIndexRoute,
  ManageReservationsIndexRoute: ManageReservationsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
